server:
  port: 8080
spring:
  main:
    web-application-type: reactive #use reactive web application type
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          #new
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: #allow all origins
              - "http://localhost:[*]"
              - "http://127.0.0.1:[*]"
              - "http://host.docker.internal:[*]"# Docker host
              - "http://api-gateway:[*]" # Docker Compose service name
              - "http://inventory-service:[*]"
              - "http://product-service:[*]"
              - "http://order-service:[*]"
              - "http://notification-service:[*]"
              - "https://docs.swagger.io"

            allowedMethods: #allow all methods
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders: #allow all headers
              - '*'
            allowCredentials: true #allow credentials
            maxAge: 3600 #cache preflight response for 1 hour
        # new
      routes:
        #product api route
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/product/**
          #product swagger route
        - id: product-docs
          uri: lb://product-service
          predicates:
            - Path=/aggregate/product-service/v3/api-docs
          filters:
            - RewritePath=/aggregate/product-service/v3/api-docs, /v3/api-docs

        #inventory api route
        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/v1/inventory/**
        #inventory swagger route
        - id: inventory-docs
          uri: lb://inventory-service
          predicates:
            - Path=/aggregate/inventory-service/v3/api-docs
          filters:
            - RewritePath=/aggregate/inventory-service/v3/api-docs, /v3/api-docs

        #order api route
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/order/**
        #order swagger route
        - id: order-docs
          uri: lb://order-service
          predicates:
            - Path=/aggregate/order-service/v3/api-docs
          filters:
            - RewritePath=/aggregate/order-service/v3/api-docs, /v3/api-docs

        #notification api route
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notification/**
        #notification swagger route
        - id: notification-docs
          uri: lb://notification-service
          predicates:
            - Path=/aggregate/notification-service/v3/api-docs
          filters:
            - RewritePath=/aggregate/notification-service/v3/api-docs, /v3/api-docs

springdoc: #access at http://localhost:8080/swagger-ui.html
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    urls:
    - name: Product Service
      url: /aggregate/product-service/v3/api-docs
    - name: Inventory Service
      url: /aggregate/inventory-service/v3/api-docs
    - name: Order Service
      url: /aggregate/order-service/v3/api-docs
    - name: Notification Service
      url: /aggregate/notification-service/v3/api-docs


logging:
    level:
        org.springframework.cloud.gateway: INFO
        com.tjtechy: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always #show details in the health endpoint


              #I will create custom filters later and will be added here
            #check https://www.geeksforgeeks.org/advance-java/spring-cloud-gateway-with-spring-webflux/

